// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PointOfSale.Models;

namespace PointOfSale.Migrations
{
    [DbContext(typeof(subContext))]
    [Migration("20210921172804_test22")]
    partial class test22
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PointOfSale.Models.DcCurrAcc", b =>
                {
                    b.Property<string>("CurrAccCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1901, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("BonusCardNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(50);

                    b.Property<byte>("CompanyCode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))")
                        .HasMaxLength(20);

                    b.Property<decimal>("CreditLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<byte>("CurrAccTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<double>("CustomerPosDiscountRate")
                        .HasColumnType("float");

                    b.Property<byte>("CustomerTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("DataLanguageCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(5);

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(60);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(60);

                    b.Property<string>("IdentityNum")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVip")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsVIP")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(60);

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))")
                        .HasMaxLength(20);

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(5);

                    b.Property<string>("PhoneNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(50);

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaxNum")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(20);

                    b.Property<byte>("VendorTypeCode")
                        .HasColumnType("tinyint");

                    b.HasKey("CurrAccCode")
                        .HasName("PK_dbo.DcCurrAcc");

                    b.HasIndex("CurrAccTypeCode")
                        .HasName("IX_CurrAccTypeCode");

                    b.ToTable("DcCurrAcc");
                });

            modelBuilder.Entity("PointOfSale.Models.DcCurrAccType", b =>
                {
                    b.Property<byte>("CurrAccTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("CurrAccTypeDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CurrAccTypeCode")
                        .HasName("PK_dbo.DcCurrAccType");

                    b.ToTable("DcCurrAccType");
                });

            modelBuilder.Entity("PointOfSale.Models.DcOffice", b =>
                {
                    b.Property<string>("OfficeCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<decimal>("CompanyCode")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("OfficeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OfficeCode")
                        .HasName("PK_dbo.DcOffice");

                    b.ToTable("DcOffice");
                });

            modelBuilder.Entity("PointOfSale.Models.DcPaymentType", b =>
                {
                    b.Property<byte>("PaymentTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("PaymentTypeDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("PaymentTypeCode")
                        .HasName("PK_dbo.DcPaymentType");

                    b.ToTable("DcPaymentType");
                });

            modelBuilder.Entity("PointOfSale.Models.DcProcess", b =>
                {
                    b.Property<string>("ProcessCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int?>("LastNumber")
                        .HasColumnType("int");

                    b.Property<string>("ProcessDescription")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProcessCode")
                        .HasName("PK_dbo.DcProcess");

                    b.ToTable("DcProcess");
                });

            modelBuilder.Entity("PointOfSale.Models.DcProduct", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<double?>("PosDiscount")
                        .HasColumnType("float");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte?>("ProductTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("PromotionCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PromotionCode2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double?>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<double?>("RetailPrice")
                        .HasColumnType("float");

                    b.Property<double?>("TaxRate")
                        .HasColumnType("float");

                    b.Property<bool?>("UseInternet")
                        .HasColumnType("bit");

                    b.Property<bool?>("UsePos")
                        .HasColumnType("bit");

                    b.Property<double?>("WholesalePrice")
                        .HasColumnType("float");

                    b.HasKey("ProductCode")
                        .HasName("PK_dbo.DcProduct");

                    b.HasIndex("ProductTypeCode")
                        .HasName("IX_ProductTypeCode");

                    b.ToTable("DcProduct");
                });

            modelBuilder.Entity("PointOfSale.Models.DcProductType", b =>
                {
                    b.Property<byte>("ProductTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProductTypeDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ProductTypeCode")
                        .HasName("PK_dbo.DcProductType");

                    b.ToTable("DcProductType");
                });

            modelBuilder.Entity("PointOfSale.Models.DcStore", b =>
                {
                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("CompanyCode")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("StoreCode")
                        .HasName("PK_dbo.DcStore");

                    b.ToTable("DcStore");
                });

            modelBuilder.Entity("PointOfSale.Models.DcTerminal", b =>
                {
                    b.Property<string>("TerminalCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TerminalDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("TerminalCode")
                        .HasName("PK_dbo.DcTerminal");

                    b.ToTable("DcTerminal");
                });

            modelBuilder.Entity("PointOfSale.Models.DcWarehouse", b =>
                {
                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("ControlStockLevel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<bool>("PermitNegativeStock")
                        .HasColumnType("bit");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WarehouseDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte>("WarehouseTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<bool>("WarnNegativeStock")
                        .HasColumnType("bit");

                    b.Property<bool>("WarnStockLevelRate")
                        .HasColumnType("bit");

                    b.HasKey("WarehouseCode")
                        .HasName("PK_dbo.DcWarehouse");

                    b.ToTable("DcWarehouse");
                });

            modelBuilder.Entity("PointOfSale.Models.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("PointOfSale.Models.Sysdiagrams", b =>
                {
                    b.Property<int>("DiagramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("diagram_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Definition")
                        .HasColumnName("definition")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("PrincipalId")
                        .HasColumnName("principal_id")
                        .HasColumnType("int");

                    b.Property<int?>("Version")
                        .HasColumnName("version")
                        .HasColumnType("int");

                    b.HasKey("DiagramId")
                        .HasName("PK_dbo.sysdiagrams");

                    b.ToTable("sysdiagrams");
                });

            modelBuilder.Entity("PointOfSale.Models.TrInvoiceHeader", b =>
                {
                    b.Property<Guid>("InvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))")
                        .HasMaxLength(20);

                    b.Property<string>("CurrAccCode")
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(30);

                    b.Property<string>("CustomsDocumentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(30);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(2000)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("DocumentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(30);

                    b.Property<TimeSpan>("DocumentTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(0)")
                        .HasDefaultValueSql("'00:00:00'");

                    b.Property<byte>("FiscalPrintedState")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalesViaInternet")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))")
                        .HasMaxLength(20);

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("OperationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<TimeSpan>("OperationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(0)")
                        .HasDefaultValueSql("'00:00:00'");

                    b.Property<string>("PosTerminalId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(30);

                    b.Property<string>("ProcessCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(5);

                    b.Property<Guid?>("RelatedInvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(30);

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(30);

                    b.HasKey("InvoiceHeaderId");

                    b.HasIndex("CurrAccCode")
                        .HasName("IX_CurrAccCode");

                    b.ToTable("TrInvoiceHeader");
                });

            modelBuilder.Entity("PointOfSale.Models.TrInvoiceLine", b =>
                {
                    b.Property<Guid>("InvoiceLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .HasDefaultValue("");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<decimal?>("DiscountCampaign")
                        .HasColumnType("money");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<Guid>("InvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LineDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("PosDiscount")
                        .HasColumnType("money");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("Qty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("1");

                    b.Property<Guid?>("RelatedLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalespersonCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float?>("VatRate")
                        .HasColumnType("real");

                    b.HasKey("InvoiceLineId")
                        .HasName("PK_dbo.TrInvoiceLine");

                    b.HasIndex("InvoiceHeaderId")
                        .HasName("IX_InvoiceHeaderId");

                    b.HasIndex("ProductCode")
                        .HasName("IX_ProductCode");

                    b.ToTable("TrInvoiceLine");
                });

            modelBuilder.Entity("PointOfSale.Models.TrPaymentHeader", b =>
                {
                    b.Property<Guid>("PaymentHeaderId")
                        .HasColumnName("PaymentHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CompanyCode")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("space(0)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrAccCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<TimeSpan>("DocumentTime")
                        .HasColumnType("time(0)");

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("InvoiceHeaderId")
                        .HasColumnName("InvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<short>("PosterminalId")
                        .HasColumnName("POSTerminalID")
                        .HasColumnType("smallint");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("PaymentHeaderId")
                        .HasName("PK_dbo.TrPaymentHeader");

                    b.ToTable("TrPaymentHeader");
                });

            modelBuilder.Entity("PointOfSale.Models.TrPaymentLine", b =>
                {
                    b.Property<Guid>("PaymentLineId")
                        .HasColumnName("PaymentLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("BankId")
                        .HasColumnName("BankID")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LineDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("Payment")
                        .HasColumnType("money");

                    b.Property<Guid>("PaymentHeaderId")
                        .HasColumnName("PaymentHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("PaymentTypeCode")
                        .HasColumnType("tinyint");

                    b.HasKey("PaymentLineId")
                        .HasName("PK_dbo.TrPaymentLine");

                    b.ToTable("TrPaymentLine");
                });

            modelBuilder.Entity("PointOfSale.Models.TrShipmentHeader", b =>
                {
                    b.Property<Guid>("ShipmentHeaderId")
                        .HasColumnName("ShipmentHeaderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CompanyCode")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrAccCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CustomsDocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrderBase")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("OperationTime")
                        .HasColumnType("time(0)");

                    b.Property<string>("ProcessCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<byte>("ShipTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("date");

                    b.Property<string>("ShippingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<Guid?>("ShippingPostalAddressId")
                        .HasColumnName("ShippingPostalAddressID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("ShippingTime")
                        .HasColumnType("time(0)");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ToWarehouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("TransferApprovedDate")
                        .HasColumnType("date");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("ShipmentHeaderId")
                        .HasName("PK_dbo.TrShipmentHeader");

                    b.ToTable("TrShipmentHeader");
                });

            modelBuilder.Entity("PointOfSale.Models.TrShipmentLine", b =>
                {
                    b.Property<Guid>("ShipmentLineId")
                        .HasColumnName("ShipmentLineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<byte>("ItemTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LineDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ProductDimensionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<string>("SalespersonCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<Guid>("ShipmentHeaderId")
                        .HasColumnName("ShipmentHeaderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UsedBarcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ShipmentLineId")
                        .HasName("PK_dbo.TrShipmentLine");

                    b.HasIndex("ShipmentHeaderId")
                        .HasName("IX_ShipmentHeaderID");

                    b.ToTable("TrShipmentLine");
                });

            modelBuilder.Entity("PointOfSale.Models.DcCurrAcc", b =>
                {
                    b.HasOne("PointOfSale.Models.DcCurrAccType", "CurrAccTypeCodeNavigation")
                        .WithMany("DcCurrAcc")
                        .HasForeignKey("CurrAccTypeCode")
                        .HasConstraintName("FK_dbo.DcCurrAcc_dbo.DcCurrAccType_CurrAccTypeCode")
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSale.Models.DcProduct", b =>
                {
                    b.HasOne("PointOfSale.Models.DcProductType", "ProductTypeCodeNavigation")
                        .WithMany("DcProduct")
                        .HasForeignKey("ProductTypeCode")
                        .HasConstraintName("FK_dbo.DcProduct_dbo.DcProductType_ProductTypeCode");
                });

            modelBuilder.Entity("PointOfSale.Models.TrInvoiceHeader", b =>
                {
                    b.HasOne("PointOfSale.Models.DcCurrAcc", "CurrAccCodeNavigation")
                        .WithMany("TrInvoiceHeader")
                        .HasForeignKey("CurrAccCode")
                        .HasConstraintName("FK_dbo.TrInvoiceHeader_dbo.DcCurrAcc_CurrAccCode");
                });

            modelBuilder.Entity("PointOfSale.Models.TrInvoiceLine", b =>
                {
                    b.HasOne("PointOfSale.Models.TrInvoiceHeader", "InvoiceHeader")
                        .WithMany("TrInvoiceLine")
                        .HasForeignKey("InvoiceHeaderId")
                        .HasConstraintName("FK_dbo.TrInvoiceLine_dbo.TrInvoiceHeader_InvoiceHeaderId")
                        .IsRequired();

                    b.HasOne("PointOfSale.Models.DcProduct", "ProductCodeNavigation")
                        .WithMany("TrInvoiceLine")
                        .HasForeignKey("ProductCode")
                        .HasConstraintName("FK_dbo.TrInvoiceLine_dbo.DcProduct_ProductCode");
                });

            modelBuilder.Entity("PointOfSale.Models.TrShipmentLine", b =>
                {
                    b.HasOne("PointOfSale.Models.TrShipmentHeader", "ShipmentHeader")
                        .WithMany("TrShipmentLine")
                        .HasForeignKey("ShipmentHeaderId")
                        .HasConstraintName("FK_dbo.TrShipmentLine_dbo.trShipmentHeader_ShipmentHeaderID")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
